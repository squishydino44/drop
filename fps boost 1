-- < Services > --
networkSettings = settings().Network
renderSettings = settings().Rendering
gameSettings = settings()["Game Options"]
userGameSettings = UserSettings():FindService("UserGameSettings") or UserSettings():GetService("UserGameSettings")
-- < Definitions > --
lagConfiguration = {
-- FPS increasing
qualityLevel = Enum.QualityLevel.Level01; -- Up to Level21
savedQualityLevel = Enum.SavedQualitySetting.QualityLevel1; -- Up to QualityLevel10
videoQualitySetting = Enum.VideoQualitySettings.LowResolution; -- Gives 15/20 additional FPS, Up to HighResolution
eagerBulkExecution = false; -- Disables unlimited budget for rendering
-- Lag decreasing (just in case!)
incommingReplicationLag = -1000;
-- funny thing because why not
hasEverUsedVR = true
}

function boostAttempt()
-- FPS boost
renderSettings.QualityLevel = lagConfiguration["qualityLevel"]
userGameSettings.SavedQualityLevel = lagConfiguration["savedQualityLevel"]
gameSettings.VideoQuality = lagConfiguration["videoQualitySetting"]
renderSettings.EagerBulkExecution = lagConfiguration["eagerBulkExecution"]
-- Decreasing lag (just in case!)
networkSettings.IncommingReplicationLag = lagConfiguration["incommingReplicationLag"]
-- funny thing
userGameSettings.HasEverUsedVR = lagConfiguration["hasEverUsedVR"]
end

boostAttempt()
